import { WeatherIntelligenceService } from './weather/weather-intelligence.service';
import { EventIntelligenceService } from './events/event-intelligence.service';
import { SentimentAnalysisService } from './sentiment/sentiment-analysis.service';
import { EconomicIntelligenceService } from './economic/economic-intelligence.service';
import { HealthIntelligenceService } from './health/health-intelligence.service';
import { DemographicsService } from './demographics/demographics.service';
import { TemporalIntelligenceService } from './temporal/temporal-intelligence.service';
import { MediaIntelligenceService } from './media/media-intelligence.service';
import { ApifySocialIntelligenceService } from './apify-social-intelligence.service';
import { DemographicIntelligenceService } from './demographic-intelligence.service';
import { ComprehensiveIntelligenceRequest, ComprehensiveIntelligenceResponse } from '../common/types/intelligence.types';
export declare class IntelligenceService {
    private readonly weatherService;
    private readonly eventService;
    private readonly sentimentService;
    private readonly economicService;
    private readonly healthService;
    private readonly demographicsService;
    private readonly temporalService;
    private readonly mediaService;
    private readonly apifySocialService;
    private readonly demographicIntelligenceService;
    private readonly logger;
    constructor(weatherService: WeatherIntelligenceService, eventService: EventIntelligenceService, sentimentService: SentimentAnalysisService, economicService: EconomicIntelligenceService, healthService: HealthIntelligenceService, demographicsService: DemographicsService, temporalService: TemporalIntelligenceService, mediaService: MediaIntelligenceService, apifySocialService: ApifySocialIntelligenceService, demographicIntelligenceService: DemographicIntelligenceService);
    getComprehensiveIntelligence(request: ComprehensiveIntelligenceRequest): Promise<ComprehensiveIntelligenceResponse>;
    private processIntelligenceResults;
    private calculateIntelligenceSummary;
    private calculateWeatherFactor;
    private calculateEventImpact;
    private calculateSentimentBoost;
    private calculateEconomicFactor;
    private calculateHealthConsideration;
    private calculateDemographicMatch;
    private calculateTemporalOptimal;
    private calculateMediaTrending;
    private generateAIRecommendationContext;
    private calculateSocialMediaBoost;
    private calculateConfidenceScore;
}
